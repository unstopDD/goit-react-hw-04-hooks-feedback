{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/Section/Section.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/App.js","index.js"],"names":["module","exports","Section","title","children","className","styles","wrapper","Statistics","good","neutral","bad","total","positivePercentage","s","item","FeedbackOptions","onLeaveFeedback","options","box","map","option","type","button","name","onClick","toUpperCase","slice","Notification","message","App","useState","setGood","setNeutral","setBad","countTotalFeedback","isShowStatistics","e","target","value","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,KAAO,2B,kBCAzBD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,gBCA7DD,EAAOC,QAAU,CAAC,IAAM,6BAA6B,OAAS,kC,iBCA9DD,EAAOC,QAAU,CAAC,QAAU,gC,qICgBbC,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,0BAASC,UAAWC,IAAOC,QAA3B,UACE,oBAAIF,UAAWC,IAAOH,MAAtB,SAA8BA,IAC7BC,M,gBCeQI,EApBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,+BACE,qBAAIR,UAAWS,IAAEC,KAAjB,mBAA8BN,KAC9B,qBAAIJ,UAAWS,IAAEC,KAAjB,sBAAiCL,EAAjC,OACA,qBAAIL,UAAWS,IAAEC,KAAjB,kBAA6BJ,EAA7B,OACA,qBAAIN,UAAWS,IAAEC,KAAjB,oBAA+BH,KAC/B,qBAAIP,UAAWS,IAAEC,KAAjB,gCAA2CF,EAA3C,Y,gBCgBSG,EAvBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,gBAAiBC,EAAc,EAAdA,QAC1C,OACE,qBAAKb,UAAWS,IAAEK,IAAlB,SACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,wBACEC,KAAK,SACLjB,UAAWS,IAAES,OACbC,KAAMH,EAENI,QAASR,EALX,SAOGI,EAAO,GAAGK,cAAgBL,EAAOM,MAAM,IAHnCN,S,gBCEAO,EARM,SAAC,GAAgC,IAAD,IAA7BC,eAA6B,MAAnB,aAAmB,EACnD,OAAO,oBAAIxB,UAAWS,IAAEe,QAAjB,SAA2BA,KCArB,SAASC,IAAO,IAAD,EACJC,mBAAS,GADL,mBACrBtB,EADqB,KACfuB,EADe,OAEED,mBAAS,GAFX,mBAErBrB,EAFqB,KAEZuB,EAFY,OAGNF,mBAAS,GAHH,mBAGrBpB,EAHqB,KAGhBuB,EAHgB,KAyBtBC,EAAqB,WAGzB,OAFc1B,EAAOC,EAAUC,GAS3ByB,EAAmBD,IAAuB,EAEhD,OACE,qCACE,cAAC,EAAD,CAAShC,MAAO,wBAAhB,SACE,cAAC,EAAD,CACEc,gBApCkB,SAAAoB,GAExB,OADiBA,EAAEC,OAAXd,MAEN,IAAK,OACHQ,GAAQ,SAAAO,GAAK,OAAIA,EAAQ,KACzB,MAEF,IAAK,UACHN,GAAW,SAAAM,GAAK,OAAIA,EAAQ,KAC5B,MAEF,IAAK,MACHL,GAAO,SAAAK,GAAK,OAAIA,EAAQ,KACxB,MAEF,QACE,SAqBErB,QAAS,CAAC,OAAQ,UAAW,WAIjC,eAAC,EAAD,CAASf,MAAM,aAAf,UACGiC,GACC,cAAC,EAAD,CACE3B,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOuB,IACPtB,mBArBD2B,KAAKC,MAAOhC,EAAO0B,IAAwB,KAAO,MAwBnDC,GAAoB,cAAC,EAAD,CAAcP,QAAQ,4BCzDpDa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACd,EAAD,MAEFe,SAASC,eAAe,W","file":"static/js/main.f481acf0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Statistics_item__vzyql\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Section_wrapper__ysmlP\",\"title\":\"Section_title__15t8s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"FeedbackOptions_box__1OpXX\",\"button\":\"FeedbackOptions_button__wtjVS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__idA0o\"};","import React from 'react';\nimport styles from './Section.module.css';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={styles.wrapper}>\n      <h2 className={styles.title}>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <ul>\n      <li className={s.item}>Good: {good}</li>\n      <li className={s.item}>Neutral: {neutral} </li>\n      <li className={s.item}>Bad: {bad} </li>\n      <li className={s.item}>Total: {total}</li>\n      <li className={s.item}>Positive feedback: {positivePercentage}% </li>\n    </ul>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ onLeaveFeedback, options }) => {\n  return (\n    <div className={s.box}>\n      {options.map(option => (\n        <button\n          type=\"button\"\n          className={s.button}\n          name={option}\n          key={option}\n          onClick={onLeaveFeedback}\n        >\n          {option[0].toUpperCase() + option.slice(1)}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string.isRequired),\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './Notification.module.css';\n\nconst Notification = ({ message = 'Not found!' }) => {\n  return <h2 className={s.message}>{message}</h2>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import { useState } from 'react';\nimport Section from './Section';\nimport Statistics from './Statistics';\nimport FeedbackOptions from './FeedbackOptions';\nimport Notification from './Notification';\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleAddFeedback = e => {\n    const { name } = e.target;\n    switch (name) {\n      case 'good':\n        setGood(value => value + 1);\n        break;\n\n      case 'neutral':\n        setNeutral(value => value + 1);\n        break;\n\n      case 'bad':\n        setBad(value => value + 1);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    const total = good + neutral + bad;\n\n    return total;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    return Math.round((good / countTotalFeedback()) * 100 || 0);\n  };\n\n  const isShowStatistics = countTotalFeedback() > 0;\n\n  return (\n    <>\n      <Section title={'Please leave feedback'}>\n        <FeedbackOptions\n          onLeaveFeedback={handleAddFeedback}\n          options={['good', 'neutral', 'bad']}\n        />\n      </Section>\n\n      <Section title=\"Statistics\">\n        {isShowStatistics && (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback()}\n            positivePercentage={countPositiveFeedbackPercentage()}\n          />\n        )}\n        {!isShowStatistics && <Notification message=\"No feedback given\" />}\n      </Section>\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}